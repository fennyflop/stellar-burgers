{"version":3,"sources":["components/orders-list/orders-list.module.css","components/user-form/user-form.module.css","components/modal-overlay/modal-overlay.module.css","components/order-submit/order-submit.module.css","components/constructor-item/constructor-item.module.css","components/order-summary/order-summary.module.css","components/ingredient-details/ingredient-details.module.css","utils/api.tsx","services/constants/index.ts","services/hooks.ts","components/protected-route.js/protected-route.tsx","utils/use-local-storage.tsx","services/actions/user.tsx","components/ingredient-icon/ingredient-icon.tsx","components/order-info/order-info.tsx","components/orders-list/orders-list.tsx","utils/use-form.ts","components/profile-input/profile-input.tsx","components/profile-edit/profile-edit.tsx","pages/profile/user-profile.tsx","components/user-form/user-form.tsx","pages/sign-in/sign-in.tsx","pages/sign-up/sign-up.tsx","pages/reset-password/reset-password.tsx","pages/forgot-password/forgot-password.tsx","components/ingredient-details/ingredient-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal-popup/modal-popup.tsx","components/header-link/header-link.tsx","components/app-header/app-header.tsx","images/orderConfirmed.svg","components/order-details/order-details.tsx","services/actions/order.tsx","services/actions/constructor.tsx","components/order-submit/order-submit.tsx","components/constructor-item/constructor-item.tsx","components/burger-constructor/burger-constructor.tsx","components/tab/tab.tsx","components/burger-ingredient-skeleton/burger-ingredient-skeleton.tsx","components/burger-skeletons/burger-skeletons.tsx","components/burger-ingredient/burger-ingredient.tsx","components/ingredients-category/ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/main-page.tsx","components/digit-display/digit-display.tsx","components/orders-collection/orders-collection.tsx","components/statistics/statistics.tsx","services/actions/socket.tsx","pages/feed/feed.tsx","components/order-summary/order-summary.tsx","components/app/app.tsx","services/actions/ingredients.tsx","reportWebVitals.ts","services/reducers/order-reducer.tsx","services/reducers/ingredients-reducer.tsx","services/reducers/constructor-reducer.ts","services/reducers/user-reducer.tsx","services/reducers/feed-reducer.ts","services/reducers/index.tsx","services/actions/feed.tsx","services/store.tsx","services/middlewares/middleware.tsx","index.tsx","components/order-details/order-details.module.css","components/order-info/order-info.module.css","components/burger-ingredient-skeleton/burger-ingredient-skeleton.module.css","components/burger-ingredient/burger-ingredient.module.css","pages/profile/profile.module.css","components/burger-skeletons/burger-skeletons.module.css","pages/sign-in/sign-in.module.css","components/ingredient-icon/ingredient-icon.module.css","components/app-header/app-header.module.css","components/burger-constructor/burger-constructor.module.css","components/burger-ingredients/burger-ingredients.module.css","components/app/app.module.css","components/orders-collection/orders-collection.module.css","components/profile-edit/profile-edit.module.css","pages/sign-up/sign-up.module.css","pages/reset-password/reset-password.module.css","pages/forgot-password/forgot-password.module.css","components/ingredients-category/ingredients-category.module.css","components/statistics/statistics.module.css","components/modal-popup/modal-popup.module.css","components/header-link/header-link.module.css","components/tab/tab.module.css","pages/feed/feed.module.css","components/digit-display/digit-display.module.css"],"names":["module","exports","api","baseURL","_baseUrl","this","res","ok","json","Promise","reject","status","refreshToken","accessToken","fetch","method","body","JSON","stringify","token","headers","then","_handleOriginalResponse","name","email","password","userData","console","log","ingredients","Authorization","user","RESET_BURGER","SWAP_INGREDIENTS","CHANGE_BURGER_BUN","ADD_BURGER_INDREDIENT","REMOVE_BURGER_INGREDIENT","FEED_REQUEST_FAIL","FEED_REQUEST_SUCCESS","FEED_REQUEST_PENDING","INGREDIENT_REQUEST_FAIL","INGREDIENT_REQUEST_PENDING","INGREDIENT_REQUEST_SUCCESS","OPEN_ORDER_POPUP","CLOSE_ORDER_POPUP","ORDER_POPUP_REQUEST_FAIL","ORDER_POPUP_REQUEST_PENDING","WS_CONNECTION_START","WS_CONNECTION_CLOSED","LOGOUT","UPDATE_USER_INFO","UPDATE_ACCESS_TOKEN","UPDATE_ORDER_HISTORY","OPEN_HEADER_POPUP","CLOSE_HEADER_POPUP","SWITCH_IS_MOBILE_VALUE","useDispatch","dispatchHook","useSelector","selectorHook","ProtectedRoute","children","props","isAuthorized","state","Boolean","render","location","to","pathname","from","setLocalStorageKey","key","value","window","localStorage","setItem","message","getLocalStorageKey","parse","getItem","getUsersOrderHistory","dispatch","success","Error","type","orders","catch","getUserInfo","updateUserInfo","updateAccessToken","IngredientIcon","ingredient","last","size","className","styles","element","image","src","image_mobile","alt","wrapper","number","OrderInfo","memo","order","createdAt","_id","useLocation","url","useRouteMatch","initialIngredients","store","buns","sauces","mains","ingredientsData","useMemo","Set","map","find","el","orderPrice","data","forEach","some","push","count","filter","v","length","reduce","acc","price","background","style","textDecoration","id","date","i","right","OrderList","custom","container","useFormWithValidation","initialValue","useState","values","setValues","errors","setErrors","isValid","setIsValid","handleChange","e","currentTarget","validationMessage","closest","checkValidity","changeValues","newData","ProfileInput","error","placeholder","onChange","isDisabled","setIsDisabled","inputRef","useRef","ref","errorText","onBlur","onIconClick","setTimeout","current","focus","disabled","icon","ProfileEdit","handleSubmit","useCallback","evt","preventDefault","changeUserInfo","resetValues","useEffect","form","onSubmit","confirmation","none","onClick","UserProfile","orderHistory","handleLogout","logout","profile","navigation","link","activeStyle","color","hint","path","exact","marginTop","UserForm","title","submitText","noValidate","SignIn","history","useHistory","previousPage","loginUser","callback","replace","attemptLogin","text","SignUp","createNewUser","ResetPassword","code","resetPassword","required","ForgotPassword","forgotPassword","IngredientDetails","useParams","inspectedIngredient","bun","main","sauce","image_large","list","info","calories","proteins","fat","carbohydrates","modalSection","document","getElementById","ModalOverlay","createPortal","popup","onClose","React","PureComponent","ModalPopup","actionType","addEventListener","closeByKey","removeEventListener","stopPropagation","button","HeaderLink","match","imageClass","isExact","IconComponent","active","AppHeader","headerStyles","header","content","OrderDetails","orderData","orderRequestSent","orderRequestFailed","identification","orderConfirmedIcon","handleOrder","concat","err","OrderSubmit","burger","isLoggedIn","sum","priceSum","isValidBurger","check","ConstructorItem","card","undefined","index","isLocked","useDrop","accept","hover","item","monitor","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","drop","useDrag","collect","isDragging","drag","opacity","draggable","handleClose","removeIngredient","thumbnail","BurgerConstructor","isBunValid","constructorTarget","maker","margin","padding","Tab","handleClick","tab","tab_type_current","BurgerIndredientSkeleton","money","BurgerSkeletons","array","Array","fill","u","section","BurgerIngredient","mobile","config","isMobileIngredients","dragRef","IngredientsCategory","forwardRef","BurgerIngredients","ingredientsRequestSent","ingredientsRequestFailed","bunsRef","sauceRef","mainRef","selectedMeal","setSelectedMeal","handleMealChange","menu","page","onScroll","MainPage","DndProvider","backend","HTML5Backend","DigitDisplay","shadow","OrdersCollection","extraClassName","resizeArray","lenght","ans","Statistics","total","feed","totalToday","doneOrders","pendingOrders","green","addSocketConnection","payload","Feed","OrderSummary","includes","selectedOrder","displayedData","colorClassName","val","footer","App","action","loggedIn","isOrderPopupOpen","orderPopupOpen","getIngredients","oldToken","updateToken","center","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","calculateSum","Object","keys","feedRequestSent","feedRequestFailed","headerPopupOpen","isMobileHeader","rootReducer","combineReducers","updatedIngredients","_","newIngredients","splice","updateFeed","feedSuccess","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","onopen","event","onclose","onerror","onmessage","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.69dd15cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-list_container__3sjN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"user-form_form__1lsS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"modal-overlay_popup__2-EDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"check\":\"order-submit_check__ijXoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"constructor-item_card__1EgVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-summary_container__GgJse\",\"id\":\"order-summary_id__20m94\",\"name\":\"order-summary_name__3XyVx\",\"green\":\"order-summary_green__3UQd5\",\"status\":\"order-summary_status__1gX4L\",\"list\":\"order-summary_list__2U_7e\",\"item\":\"order-summary_item__2YDD9\",\"ingredient\":\"order-summary_ingredient__S8Gpr\",\"check\":\"order-summary_check__1NUzj\",\"footer\":\"order-summary_footer__22tV8\",\"price\":\"order-summary_price__1SJUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__178Zh\",\"title\":\"ingredient-details_title__i_Tje\",\"image\":\"ingredient-details_image__2-P7O\",\"list\":\"ingredient-details_list__j-3ZO\",\"info\":\"ingredient-details_info__3OQTx\",\"name\":\"ingredient-details_name__2c-9h\"};","class Api {\r\n    _baseUrl: string;\r\n\r\n    constructor(baseURL: string) {\r\n        this._baseUrl = baseURL;\r\n    }\r\n\r\n    _handleOriginalResponse(res: any) {\r\n        if (res.ok) return res.json();\r\n        return Promise.reject(`Ошибка: ${res.status}.`)\r\n    }\r\n\r\n    logout(refreshToken: string, accessToken: string) {\r\n        return fetch(`${this._baseUrl}/auth/logout`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({token: refreshToken}),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": accessToken,\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n    getUsersOrderHistory(token: string) {\r\n        return fetch(`${this._baseUrl}/orders`, {\r\n            method: \"GET\",\r\n            headers : {\r\n                'Content-type': 'application/json',\r\n                \"Authorization\": token,\r\n            },\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n    updateToken(token: string) {\r\n        return fetch(`${this._baseUrl}/auth/token`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({token}),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n    changeUserInfo(name: string, email: string, password: string, token: string) {\r\n        const userData = {\r\n            name,\r\n            email,\r\n            [password ? 'password' : '']: password,\r\n        }\r\n        console.log(userData, password);\r\n        if (password) userData.password = password;\r\n        return fetch(`${this._baseUrl}/auth/user`, {\r\n            method: \"PATCH\",\r\n            headers : {\r\n                'Content-type': 'application/json',\r\n                \"Authorization\": token,\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n    }\r\n    getUserInfo(token: string) {\r\n        return fetch(`${this._baseUrl}/auth/user`, {\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": token,\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        });\r\n    }\r\n    getIngredients() {\r\n        return fetch(`${this._baseUrl}/ingredients`)\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        });\r\n    }\r\n    getInitialOrders() {\r\n        return fetch(`${this._baseUrl}/orders/all`)\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n    \r\n    handleOrder(ingredients: ReadonlyArray<string>, token: string) {\r\n        return fetch(`${this._baseUrl}/orders`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ingredients}),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n                Authorization: token,\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n    attemptLogin(user: {email: string, password: string}) {\r\n        return fetch(`${this._baseUrl}/auth/login`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        });\r\n    }\r\n    createNewUser(user: {email: string, password: string, name: string}) {\r\n        return fetch(`${this._baseUrl}/auth/register`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        });\r\n    }\r\n    forgotPassword(email: string) {\r\n        return fetch(`${this._baseUrl}/password-reset`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({email}),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        });\r\n    }\r\n    resetPassword(password: string, token: string) {\r\n        return fetch(`${this._baseUrl}/password-reset/reset`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({password, token}),\r\n            headers : {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        });\r\n    }\r\n}\r\n\r\nconst api = new Api(\"https://norma.nomoreparties.space/api\");\r\n\r\nexport default api;","// Constructor\r\nexport const RESET_BURGER: 'RESET_BURGER' = 'RESET_BURGER';\r\nexport const SWAP_INGREDIENTS: 'SWAP_INGREDIENTS' = 'SWAP_INGREDIENTS';\r\nexport const CHANGE_BURGER_BUN: 'CHANGE_BURGER_BUN' = 'CHANGE_BURGER_BUN';\r\nexport const ADD_BURGER_INDREDIENT: 'ADD_BURGER_INDREDIENT' = 'ADD_BURGER_INDREDIENT';  \r\nexport const REMOVE_BURGER_INGREDIENT: 'REMOVE_BURGER_INGREDIENT' = 'REMOVE_BURGER_INGREDIENT';\r\n\r\n// Feed\r\nexport const FEED_REQUEST_FAIL: 'FEED_REQUEST_FAIL' =  'FEED_REQUEST_FAIL';\r\nexport const FEED_REQUEST_SUCCESS: 'FEED_REQUEST_SUCCESS' = 'FEED_REQUEST_SUCCESS';\r\nexport const FEED_REQUEST_PENDING: 'FEED_REQUEST_PENDING' = 'FEED_REQUEST_PENDING';\r\n\r\n// Ingredients\r\n\r\nexport const INGREDIENT_REQUEST_FAIL: 'INGREDIENT_REQUEST_FAIL' = 'INGREDIENT_REQUEST_FAIL';\r\nexport const INGREDIENT_REQUEST_PENDING: 'INGREDIENT_REQUEST_PENDING' = 'INGREDIENT_REQUEST_PENDING';\r\nexport const INGREDIENT_REQUEST_SUCCESS: 'INGREDIENT_REQUEST_SUCCESS' = 'INGREDIENT_REQUEST_SUCCESS';\r\n\r\n// Order\r\n\r\nexport const OPEN_ORDER_POPUP: 'OPEN_ORDER_POPUP' = 'OPEN_ORDER_POPUP';\r\nexport const CLOSE_ORDER_POPUP: 'CLOSE_ORDER_POPUP' = 'CLOSE_ORDER_POPUP';\r\nexport const ORDER_POPUP_REQUEST_FAIL: 'ORDER_POPUP_REQUEST_FAIL' = 'ORDER_POPUP_REQUEST_FAIL';\r\nexport const ORDER_POPUP_REQUEST_PENDING: 'ORDER_POPUP_REQUEST_PENDING' = 'ORDER_POPUP_REQUEST_PENDING';\r\n\r\n// Socket\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\n\r\n// User\r\n\r\nexport const LOGOUT: 'LOGOUT' = 'LOGOUT';\r\nexport const UPDATE_USER_INFO: 'UPDATE_USER_INFO' = 'UPDATE_USER_INFO';\r\nexport const UPDATE_ACCESS_TOKEN: 'UPDATE_ACCESS_TOKEN' = 'UPDATE_ACCESS_TOKEN';\r\nexport const UPDATE_ORDER_HISTORY: 'UPDATE_ORDER_HISTORY' = 'UPDATE_ORDER_HISTORY';\r\n\r\n// Constants\r\n\r\nexport const OPEN_HEADER_POPUP: 'OPEN_HEADER_POPUP' = 'OPEN_HEADER_POPUP';\r\nexport const CLOSE_HEADER_POPUP: 'CLOSE_HEADER_POPUP' = 'CLOSE_HEADER_POPUP';\r\nexport const SWITCH_IS_MOBILE_VALUE: 'SWITCH_IS_MOBILE_VALUE' = 'SWITCH_IS_MOBILE_VALUE';","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from './types';\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","import React from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\ninterface IProtectedRoute {\r\n  path: string;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<IProtectedRoute> = ({ children, ...props }) => {\r\n  const isAuthorized = useSelector(state => Boolean(state.user.token));\r\n    return (\r\n    <Route\r\n      {...props}\r\n      render={({ location }) =>\r\n        isAuthorized ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n              // Передадим в пропс to не строку, а объект.\r\n              to={{\r\n                  // Маршрут, на который произойдёт переадресация\r\n                  pathname: '/login',\r\n                  state: { from: location }\r\n              }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","export function setLocalStorageKey(key: string, value: string) { // для объектов не работает\r\n    try {\r\n        window.localStorage.setItem(key, JSON.stringify(value));\r\n      } catch (message) {\r\n        console.log(message);\r\n    }\r\n}\r\n\r\nexport function getLocalStorageKey(key: string) {\r\n    try {\r\n        return JSON.parse(window.localStorage.getItem(key) || '{}');\r\n    } catch (message) {\r\n        console.log(message);\r\n    }\r\n}","import api from \"../../utils/api\";\r\nimport { getLocalStorageKey, setLocalStorageKey } from \"../../utils/use-local-storage\";\r\n\r\nimport { AppThunk, AppDispatch } from '../types';\r\n\r\nimport { \r\n    LOGOUT,\r\n    UPDATE_USER_INFO,\r\n    UPDATE_ACCESS_TOKEN,\r\n    UPDATE_ORDER_HISTORY,\r\n } from '../constants/index';\r\n\r\nimport { TOrder } from \"../types/data\";\r\n\r\nexport interface IUpdateOrderHistory {\r\n    readonly type: typeof UPDATE_ORDER_HISTORY;\r\n    readonly orders: ReadonlyArray<TOrder>\r\n}\r\n\r\ninterface IUpdateUserData {\r\n    readonly type: typeof UPDATE_USER_INFO;\r\n    readonly name: string;\r\n    readonly email: string;\r\n}\r\n\r\ninterface IUpdateAccessToken {\r\n    readonly type: typeof UPDATE_ACCESS_TOKEN;\r\n    readonly token: string;\r\n}\r\n\r\ninterface ILogout {\r\n    readonly type: typeof LOGOUT;\r\n}\r\n\r\nexport type TUserActions = IUpdateAccessToken | IUpdateOrderHistory | IUpdateUserData | ILogout;\r\n\r\nexport const getUsersOrderHistory: AppThunk = (accessToken: string) => (dispatch: AppDispatch) => {\r\n    api.getUsersOrderHistory(accessToken)\r\n    .then((res) => {\r\n        if (res.success) {\r\n            dispatch({type: UPDATE_ORDER_HISTORY, orders: res.orders});\r\n        } else { throw new Error(\"Couldn't get user's orders\") }\r\n    })\r\n    .catch((message) => {\r\n        console.log(message);\r\n    })\r\n};\r\n\r\nexport const logout: AppThunk = (accessToken: string) => (dispatch: AppDispatch) => {\r\n    const refreshToken = getLocalStorageKey(\"token\");\r\n    api.logout(refreshToken, accessToken)\r\n    .then(({success}) => {\r\n        if (success) {\r\n            console.log(\"LOGOUT\");\r\n            setLocalStorageKey(\"token\", \"\");\r\n            return dispatch({type: LOGOUT});\r\n        }\r\n        throw new Error(\"Unable to logout.\");\r\n    })\r\n    .catch((message) => {\r\n        console.log(message);\r\n    });\r\n};\r\n\r\nexport const updateToken: AppThunk = (refreshToken: string) => (dispatch: AppDispatch) => {\r\n    api.updateToken(refreshToken)\r\n    .then(({success, accessToken, refreshToken}) => {\r\n      if (success) {\r\n        console.log(\"UPDATE TOKEN\");\r\n        setLocalStorageKey(\"token\", refreshToken);\r\n        dispatch(getUserInfo(accessToken));\r\n        return dispatch(updateAccessToken(accessToken));\r\n      }\r\n      throw new Error(\"Couldn't refresh token\");\r\n    }).catch((message) => console.log(message));\r\n};\r\n\r\nexport const getUserInfo: AppThunk = (token: string) => (dispatch: AppDispatch) => {\r\n    api.getUserInfo(token)\r\n    .then(({success, user : {name, email}}) => {\r\n        if (success) return dispatch(updateUserInfo(name, email));\r\n        throw new Error(\"Unable to get user info.\");\r\n    })\r\n    .catch((message) => {\r\n        console.log(message);\r\n    });\r\n};\r\n\r\nexport const changeUserInfo: AppThunk = (name: string, email: string, password: string, token: string) => (dispatch: AppDispatch) => {\r\n    api.changeUserInfo(name, email, password, token)\r\n    .then(() => {\r\n        dispatch(email, name)\r\n    })\r\n    .catch((message) => {\r\n        console.log(message);\r\n    })\r\n};\r\n\r\nexport function updateUserInfo(name: string, email: string): IUpdateUserData {\r\n    return {\r\n        type: UPDATE_USER_INFO,\r\n        name,\r\n        email,\r\n    };\r\n}\r\n\r\nexport function updateAccessToken(token: string): IUpdateAccessToken {\r\n    return {\r\n        type: UPDATE_ACCESS_TOKEN,\r\n        token,\r\n    };\r\n}\r\n\r\nexport const signUp: AppThunk = (data: {name: string, email: string, password: string}, callback: () => void) => (dispatch: AppDispatch) => {\r\n    api.createNewUser({\r\n        name: data.name,\r\n        email: data.email,\r\n        password: data.password,\r\n    })\r\n    .then(({success, user : {name, email}, accessToken, refreshToken}) => {\r\n        if (success) {\r\n            setLocalStorageKey(\"token\", refreshToken);\r\n            dispatch(updateUserInfo(name, email));\r\n            dispatch(updateAccessToken(accessToken));\r\n            return callback();\r\n        }\r\n        throw new Error(\"Couldn't create new user\");\r\n    })\r\n    .catch((message) => {\r\n        console.log(message);\r\n    })\r\n};\r\n\r\nexport const signIn: AppThunk = (data: {email: string, password: string}, callback: () => void) => (dispatch: AppDispatch) => {\r\n    api.attemptLogin({email: data.email, password: data.password})\r\n    .then(({success, message, user : {name, email}, accessToken, refreshToken}) => {\r\n        if (success) {\r\n            setLocalStorageKey(\"token\", refreshToken);\r\n            dispatch(updateUserInfo(name, email));\r\n            dispatch(updateAccessToken(accessToken));\r\n            return callback();   \r\n        }\r\n        throw new Error(\"Error in attemt to login. \" + message);\r\n    })\r\n    .catch((message) => console.log(message));\r\n};\r\n\r\nexport function forgotPassword(data: {email: string}, callback: () => void) {\r\n    api.forgotPassword(data.email)\r\n    .then(({success}) => {\r\n        if (success) callback();\r\n    })\r\n    .catch((message) => console.log(message));\r\n}\r\n\r\nexport function resetPassword(data: {password: string, code: string}, callback: () => void) {\r\n    api.resetPassword(data.password, data.code)\r\n    .then(({success}) => {\r\n        if (success) return callback();\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { TIngredient } from '../../services/types/data';\r\nimport styles from './ingredient-icon.module.css';\r\n\r\ninterface IIngredientIcon {\r\n    size?: number;\r\n    last?: boolean;\r\n    ingredient: TIngredient;\r\n};\r\n\r\nconst IngredientIcon: React.FC<IIngredientIcon> = ({ingredient, last, size}) => {\r\n    if (!ingredient) return null;\r\n    return (\r\n        <div className={styles.element}>\r\n            <img className={styles.image} src={ingredient.image_mobile} alt=\"Image\" />\r\n            {last && <div className={styles.wrapper}><p className={`text text_type_main-default ${styles.number}`}>+{(size || 0) - 8}</p></div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientIcon;","import React, { memo, useMemo } from 'react';\r\nimport styles from './order-info.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport IngredientIcon from '../ingredient-icon/ingredient-icon';\r\nimport {useRouteMatch, Link, useLocation} from 'react-router-dom';\r\n\r\nimport { TIngredient, TOrder } from '../../services/types/data';\r\n\r\ninterface IOrderInfo {\r\n    order: TOrder;\r\n}\r\n\r\nconst OrderInfo = memo<IOrderInfo>(({order : {name, number, ingredients, createdAt, _id}}) => {\r\n    const location = useLocation();\r\n    const { url } = useRouteMatch();\r\n    \r\n    const { initialIngredients } = useSelector(store => {\r\n        return {\r\n            initialIngredients: [...store.ingredients.buns, ...store.ingredients.sauces, ...store.ingredients.mains],\r\n        }\r\n    })\r\n    const ingredientsData = useMemo(() => {\r\n        return [...new Set(ingredients.map((ingredient) => { // no duplicates\r\n            return initialIngredients.find((el) => el._id === ingredient);\r\n        }))];\r\n    }, [ingredients]);\r\n\r\n    const orderPrice = useMemo(() => {\r\n        const data: Array<TIngredient> = [];\r\n        initialIngredients.forEach((ingredient) => {\r\n            ingredients.some((el) => el === ingredient._id) && data.push({...ingredient, count: ingredients.filter(v => v === ingredient._id).length});\r\n        })\r\n        return data.reduce((acc, el: TIngredient) => acc + (el.price * (el.count || 1)), 0);\r\n    }, [initialIngredients, ingredients]);\r\n\r\n    return (\r\n        <Link to={{pathname: `${url}/${_id}`, state: { background: location}}} style={{ textDecoration: 'none' }}>\r\n            <li className={styles.order}>\r\n                <p className={`text text_type_digits-default ${styles.id}`}>\r\n                    #{number}\r\n                </p>\r\n                <p className={`text text_type_main-default text_color_inactive ${styles.date}`}>\r\n                    {createdAt}\r\n                </p>\r\n                <h3 className={`text text_type_main-medium ${styles.name}`}>{name}</h3>\r\n                <ul className={styles.ingredients}>\r\n                    {\r\n                        ingredientsData.map((ingredient, i) => {\r\n                            return ingredient && (i < 7 || ingredientsData.length === 8) ?\r\n                            <li className={styles.element} style={{right: `${10*i}px`}} key={i}><IngredientIcon ingredient={ingredient} /></li>\r\n                            :\r\n                            ingredient && i === 8 ?\r\n                            <li className={styles.element} style={{right: `${10*i}px`}} key={i}><IngredientIcon ingredient={ingredient} last={true} size={ingredientsData.length} /></li>\r\n                            :\r\n                            null;\r\n                        })\r\n                    }\r\n                </ul>\r\n                <span className={`text text_type_digits-medium ${styles.price}`}>{\r\n                    orderPrice\r\n                }</span>\r\n            </li>\r\n        </Link>\r\n    );\r\n})\r\n\r\nexport default OrderInfo;","import React from 'react';\r\nimport styles from './orders-list.module.css';\r\nimport OrderInfo from '../order-info/order-info';\r\nimport { TOrder } from '../../services/types/data';\r\n\r\ninterface IOrderList {\r\n    orders: ReadonlyArray<TOrder>;\r\n    custom?: React.CSSProperties;\r\n}\r\n\r\nconst OrderList: React.FC<IOrderList> = ({orders, custom}) => {\r\n    return (orders.length ? \r\n        (<ul className={styles.container} style={custom}>\r\n            {\r\n                orders.map((order) => {\r\n                    return <OrderInfo order={order} key={order._id} />\r\n                })\r\n            }\r\n        </ul>)\r\n        :\r\n        <p className=\"text text_type_main-large\">\r\n            Нет заказов\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default OrderList;","import React, { useState } from \"react\";\r\n\r\n// везде задавать initial value может быть решит проблему\r\n\r\nconst useFormWithValidation = <TValuesType = {[key: string]: string}>(initialValue: TValuesType) => {\r\n    const [values, setValues] = useState<TValuesType>(initialValue);\r\n    const [errors, setErrors] = useState<TValuesType>(initialValue);\r\n    const [isValid, setIsValid] = useState<boolean>(true);\r\n\r\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        const {name, value} = e.currentTarget;\r\n        setValues({...values, [name]: value});\r\n        setErrors({...errors, [name]: e.currentTarget.validationMessage});\r\n        // @ts-ignore: Тут говорит, что нет таких полей. Что мне тут следует делать?:)\r\n        setIsValid(e.currentTarget.closest(\"form\").checkValidity());\r\n    }\r\n\r\n    const changeValues = (newData: TValuesType) => {\r\n        setValues(newData);\r\n    }\r\n    \r\n    return {values, errors, isValid, handleChange, changeValues};\r\n}\r\n\r\nexport default useFormWithValidation;","import React, { useRef, useState } from 'react';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IProfileInput {\r\n    name: string;\r\n    value: string;\r\n    error: string;\r\n    type: 'text' | 'password' | 'email';\r\n    placeholder: string;\r\n    onChange: React.FormEvent<HTMLInputElement> | any;\r\n    size?: 'default' | 'small' | undefined;\r\n}\r\n\r\nconst ProfileInput: React.FC<IProfileInput> = ({name = '', value = '', error = '', type = 'text', placeholder = '', size = 'default', onChange}) => {\r\n\r\n    const [isDisabled, setIsDisabled] = useState<boolean>(true);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onIconClick = () => {\r\n        setIsDisabled(false);\r\n        // @ts-ignore: doesn't understand\r\n        setTimeout(() => inputRef && inputRef.current.focus(), 0);\r\n    }\r\n\r\n    const onBlur = () => {\r\n        setIsDisabled(true);\r\n    }\r\n\r\n    return (\r\n        <Input \r\n            ref={inputRef}\r\n\r\n            name={name}\r\n            type={type}\r\n            value={value}\r\n            error={Boolean(error)}\r\n            errorText={error}\r\n            placeholder={placeholder}\r\n\r\n            onBlur={onBlur}\r\n            onChange={onChange}\r\n            onIconClick={onIconClick}\r\n            disabled={isDisabled}\r\n\r\n            icon={'EditIcon'}\r\n            size={size}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProfileInput;","import styles from './profile-edit.module.css';\r\nimport useFormWithValidation from '../../utils/use-form';\r\nimport ProfileInput from '../profile-input/profile-input';\r\nimport { useCallback, useEffect } from 'react';\r\nimport { changeUserInfo } from '../../services/actions/user';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst ProfileEdit = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {name, email, token} = useSelector(store => {\r\n        return {\r\n            name: store.user.name,\r\n            email: store.user.email,\r\n            token: store.user.token,\r\n        }\r\n    });\r\n\r\n    const {values, errors, isValid, handleChange, changeValues} = useFormWithValidation({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleSubmit = useCallback((evt) => {\r\n        evt.preventDefault();\r\n        dispatch(changeUserInfo(values.name, values.email, values.password, token));\r\n    }, [values]);\r\n\r\n    const resetValues = useCallback(() => {\r\n        name && email && changeValues({name, email, password: values.password});\r\n    }, [values, name, email]);\r\n\r\n    useEffect(() => {\r\n        name && email && changeValues({name, email, password: values.password}); // Should be valid values\r\n    }, [name, email])\r\n\r\n    return (\r\n            <form className={styles.form} onSubmit={handleSubmit}>\r\n                <ProfileInput \r\n                    name={\"name\"}\r\n                    type={\"text\"}\r\n                    error={errors.name}\r\n                    value={values.name || ''}\r\n                    placeholder={\"Имя\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <ProfileInput\r\n                    name={\"email\"}\r\n                    type={\"email\"}\r\n                    error={errors.email}\r\n                    value={values.email || ''}\r\n                    placeholder={\"Логин\"}\r\n                    onChange={handleChange}\r\n                />\r\n                <ProfileInput\r\n                    name={\"password\"}\r\n                    type={\"password\"}\r\n                    error={errors.password}\r\n                    value={values.password || ''}\r\n                    placeholder={\"Пароль\"}\r\n                    onChange={handleChange}\r\n                /> \r\n                <div className={styles.confirmation + ((values.name === name && values.email === email && !values.password) || !isValid ? styles.none : '')}>\r\n                    <Button type=\"secondary\" size=\"medium\" onClick={resetValues}>\r\n                        Отмена\r\n                    </Button>\r\n                    <Button type=\"primary\" size=\"large\" onClick={handleSubmit}> {/* В иделае можно было бы через onSubmit, но тут пресетная кнопка */}\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;","import React from 'react';\r\nimport { useCallback } from 'react';\r\nimport styles from './profile.module.css';\r\nimport { logout } from '../../services/actions/user';\r\nimport { Switch, NavLink, Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport OrderList from '../../components/orders-list/orders-list';\r\nimport ProfileEdit from '../../components/profile-edit/profile-edit';\r\n\r\ninterface IUserProfile {};\r\n\r\nconst UserProfile: React.FC<IUserProfile> = () => {\r\n    const dispatch = useDispatch();\r\n    const token = useSelector(store => store.user.token);\r\n    const orders = useSelector(store => store.user.orderHistory);\r\n\r\n    const handleLogout = useCallback(() => {\r\n        dispatch(logout(token));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className={styles.profile}>\r\n            <nav className={styles.navigation}>\r\n                    <NavLink className={`text text_type_main-medium text_color_inactive ${styles.link}`} activeStyle={{color: \"white\"}} to=\"/profile/edit\">\r\n                        Профиль\r\n                    </NavLink>\r\n                    <NavLink className={`text text_type_main-medium text_color_inactive ${styles.link}`} activeStyle={{color: \"white\"}} to=\"/profile/orders\">\r\n                        История заказов\r\n                    </NavLink>\r\n                    <button className={`text text_type_main-medium text_color_inactive ${styles.link}`} onClick={handleLogout}>\r\n                        Выход\r\n                    </button>\r\n                    <p className={`text text_type_main-small text_color_inactive ${styles.hint}`}>\r\n                        В этом разделе вы можете\r\n                        изменить свои персональные данные\r\n                    </p>\r\n            </nav>\r\n            <Switch>\r\n                <Route path=\"/profile/edit\" exact={true}>\r\n                    <ProfileEdit />\r\n                </Route>\r\n                <Route path=\"/profile/orders\">\r\n                    <OrderList orders={orders} custom={{marginTop: \"-70px\"}} />\r\n                </Route>\r\n            </Switch>\r\n            <></> {/* Сделано чтобы расположить по центру меню с формами. Ломается если удалить */}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport styles from './user-form.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IUserForm {\r\n    title: string;\r\n    isValid?: boolean;\r\n    submitText: string;\r\n    onSubmit: React.FormEventHandler;\r\n}\r\n\r\nconst UserForm: React.FC<IUserForm> = ({title, submitText, children, onSubmit}) => {\r\n    return (\r\n        <form className={styles.form} noValidate onSubmit={onSubmit}>\r\n            <h2 className=\"text text_type_main-medium\">\r\n              {title}\r\n            </h2>\r\n            {children}\r\n            <Button type=\"primary\" size=\"medium\">\r\n                {submitText}\r\n            </Button>\r\n            <div className=\"m-2\"></div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserForm;","import React from 'react';\r\nimport styles from './sign-in.module.css';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signIn } from '../../services/actions/user';\r\nimport useFormWithValidation from '../../utils/use-form';\r\nimport UserForm from '../../components/user-form/user-form';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IHistoryState } from '../../services/types/data';\r\n\r\ninterface ISignIn {};\r\n\r\nconst SignIn: React.FC<ISignIn> = () => {\r\n    const history: IHistoryState = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const isAuthorized = useSelector(state => Boolean(state.user.token));\r\n    \r\n    const {values, errors, isValid, handleChange} = useFormWithValidation({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const previousPage = useMemo(() => history.location.state ? history.location.state.from.pathname : \"/\", [history]);\r\n\r\n    const loginUser = useCallback((evt) => {\r\n        evt.preventDefault();\r\n        dispatch(signIn({email: values.email, password: values.password}, () => {\r\n            return history.replace({pathname: previousPage});   \r\n        }));\r\n    }, [history, dispatch, values, previousPage]);\r\n\r\n    return (\r\n        isAuthorized ? <Redirect to={{pathname: previousPage}} /> :\r\n        <section className={styles.container}>\r\n\r\n            <UserForm submitText=\"Войти\" title=\"Вход\" isValid={isValid} onSubmit={loginUser}>\r\n                <Input onChange={handleChange} value={values.email || ''} error={Boolean(errors.email)} errorText={errors.email} name={'email'} type=\"email\" placeholder={\"E-mail\"} />\r\n                <PasswordInput onChange={handleChange} value={values.password || ''} name={'password'} /> {/* Уже обрабатывает ошибки */}\r\n            </UserForm>\r\n\r\n            <p className={`text text_type_main-default text_color_inactive ${styles.text}`}>\r\n                Вы — новый пользователь? <Link className={`text text_type_main-default ${styles.link}`} to=\"/register\">Зарегистрироваться</Link>\r\n            </p>\r\n            <div className=\"m-2\"></div>\r\n            <p className={`text text_type_main-default text_color_inactive ${styles.text}`}>\r\n                Забыли пароль? <Link className={`text text_type_main-default ${styles.link}`} to=\"/forgot-password\">Восстановить пароль</Link>\r\n            </p>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './sign-up.module.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useDispatch} from '../../services/hooks';\r\nimport { signUp } from '../../services/actions/user';\r\nimport useFormWithValidation from '../../utils/use-form';\r\nimport UserForm from '../../components/user-form/user-form';\r\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IHistoryState } from '../../services/types/data';\r\n\r\ninterface ISignUp {};\r\n\r\nconst SignUp: React.FC<ISignUp> = () => {\r\n    const history: IHistoryState = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {values, errors, isValid, handleChange} = useFormWithValidation({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const registerUser = (evt: React.FormEvent<HTMLFormElement>) => {\r\n        evt.preventDefault();\r\n        dispatch(signUp({name: values.name, email: values.email, password: values.password}, () => {\r\n            const previousPage = history.location.state ? history.location.state.from.pathname : \"/\";\r\n            return history.replace({pathname: previousPage});\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n\r\n            <UserForm title=\"Регистрация\" submitText=\"Зарегистрироваться\" isValid={isValid} onSubmit={registerUser}>\r\n                <Input onChange={handleChange} value={values.name || ''} error={Boolean(errors.name)} errorText={errors.name} name={'name'} type=\"text\" placeholder={\"Имя\"} />\r\n                <Input onChange={handleChange} value={values.email || ''} error={Boolean(errors.email)} errorText={errors.email} name={'email'} type=\"email\" placeholder={\"E-mail\"} />\r\n                <PasswordInput onChange={handleChange} value={values.password || ''} name={'password'} /> {/* Тут уже всё продумано */}\r\n            </UserForm>\r\n\r\n            <p className={`text text_type_main-default text_color_inactive ${styles.text}`}>\r\n              Уже зарегистрированы? <Link className={`text text_type_main-default ${styles.link}`} to=\"/login\">Войти</Link>\r\n            </p>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport UserForm from '../../components/user-form/user-form';\r\nimport styles from './reset-password.module.css';\r\nimport useFormWithValidation from '../../utils/use-form';\r\nimport { PasswordInput, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { resetPassword } from '../../services/actions/user';\r\n\r\ninterface IResetPassword {};\r\n\r\nconst ResetPassword: React.FC<IResetPassword> = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {values, errors, isValid, handleChange} = useFormWithValidation({\r\n        password: '',\r\n        code: '',        \r\n    });\r\n\r\n    const handleSubmit = useCallback((evt) => {\r\n        evt.preventDefault();\r\n        resetPassword({password: values[\"password\"], code: values[\"code\"]}, () => history.push(\"/login\"));\r\n    }, [values, dispatch, history])\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n            <UserForm title=\"Восстановление пароля\" submitText=\"Сохранить\" isValid={isValid} onSubmit={handleSubmit}>\r\n                <PasswordInput onChange={handleChange} value={values.password || ''} name={'password'} /> {/* Нельзя менять placeholder, а делать свой passwordinput не хочется */}\r\n                {/* @ts-ignore: says required is invalid prop */}\r\n                <Input onChange={handleChange} value={values.code || ''} error={Boolean(errors.code)} errorText={errors.code} name={'code'} type=\"text\" placeholder={\"Введите код из письма\"} required={true} />\r\n            </UserForm>\r\n            <p className={`text text_type_main-default text_color_inactive ${styles.text}`}>\r\n                Вспомнили пароль? <Link className={`text text_type_main-default ${styles.link}`} to=\"/login\">Войти</Link>\r\n            </p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;","import React from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport styles from './forgot-password.module.css';\r\nimport useFormWithValidation from '../../utils/use-form';\r\nimport UserForm from '../../components/user-form/user-form';\r\nimport { forgotPassword } from '../../services/actions/user';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IForgotPassword {};\r\n\r\nconst ForgotPassword: React.FC<IForgotPassword> = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {values, errors, isValid, handleChange} = useFormWithValidation({\r\n        email: '',\r\n    });\r\n\r\n    const handleSubmit = useCallback((evt) => {\r\n        evt.preventDefault();\r\n        forgotPassword({email: values.email}, () => history.push(\"/reset-password\"));\r\n    }, [values, dispatch, history])\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n            <UserForm title=\"Восстановление пароля\" submitText=\"Восстановить\" isValid={isValid} onSubmit={handleSubmit}>\r\n                <Input onChange={handleChange} value={values.email || ''} error={Boolean(errors.email)} errorText={errors.email} name={'email'} type=\"email\" placeholder={\"Укажите e-mail\"} />\r\n            </UserForm>\r\n            <p className={`text text_type_main-default text_color_inactive ${styles.text}`}>\r\n                Вспомнили пароль? <Link className={`text text_type_main-default ${styles.link}`} to=\"/login\">Войти</Link>\r\n            </p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nimport styles from './ingredient-details.module.css';\r\n\r\ninterface IIngredientDetails {}\r\n\r\nconst IngredientDetails: React.FC<IIngredientDetails> = () => {\r\n    const { id } = useParams<{id?: string}>();\r\n    const {inspectedIngredient} = useSelector(store => {\r\n        return {\r\n            inspectedIngredient:    \r\n            store.ingredients.buns.find((bun: TIngredient) => bun._id === id)\r\n            ||\r\n            store.ingredients.mains.find((main: TIngredient) => main._id === id)\r\n            ||\r\n            store.ingredients.sauces.find((sauce: TIngredient) => sauce._id === id)\r\n        }\r\n    });\r\n\r\n    if (!inspectedIngredient) return null;\r\n    return (\r\n            <section className={styles.container}>\r\n                <p className={`text text_type_main-large ${styles.title}`}>Детали ингредиента</p>\r\n                <img className={styles.image} src={inspectedIngredient.image_large} alt={inspectedIngredient.name} />\r\n                <p className={`text text_type_main-medium ${styles.name}`}>\r\n                    {inspectedIngredient.name}\r\n                </p>\r\n                <ul className={styles.list}>\r\n                    <li className={styles.info}>\r\n                    <p className=\"text text_type_main-small text_color_inactive\">\r\n                        Калории, ккал\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {inspectedIngredient.calories}\r\n                    </p>\r\n                    </li>\r\n                    <li className={styles.info}>\r\n                    <p className=\"text text_type_main-small text_color_inactive\">\r\n                        Белки, г\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {inspectedIngredient.proteins}\r\n                    </p>\r\n                    </li>\r\n                    <li className={styles.info}>\r\n                    <p className=\"text text_type_main-small text_color_inactive\">\r\n                        Жиры, г\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {inspectedIngredient.fat}\r\n                    </p>\r\n                    </li>\r\n                    <li className={styles.info}>\r\n                    <p className=\"text text_type_main-small text_color_inactive\">\r\n                        Углеводы, г\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {inspectedIngredient.carbohydrates}\r\n                    </p>\r\n                    </li>\r\n                </ul>\r\n            </section>\r\n    );\r\n}\r\n\r\nexport default IngredientDetails;","import { createPortal } from 'react-dom';\r\nimport styles from './modal-overlay.module.css';\r\nimport React from 'react';\r\n\r\nconst modalSection: any = document.getElementById('modals');\r\n\r\ninterface IModalOverlay{\r\n    onClose: () => void;\r\n}\r\n\r\nclass ModalOverlay extends React.PureComponent<IModalOverlay> {\r\n    render () {\r\n        return createPortal(\r\n            <section className={styles.popup} onClick={this.props.onClose}>\r\n                {this.props.children}\r\n            </section>,\r\n            modalSection\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalOverlay;","import React, {useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport styles from './modal-popup.module.css';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\nimport {CloseIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch } from '../../services/hooks';\r\n\r\ninterface IModalPopup {\r\n    link?: string;\r\n    actionType: string | null;\r\n}\r\n\r\nconst ModalPopup: React.FC<IModalPopup> = ({actionType, link = '', children}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch(); \r\n    useEffect(() => {\r\n        document.addEventListener('keydown', closeByKey);\r\n        return () => {document.removeEventListener('keydown', closeByKey)};\r\n    }, [children])\r\n\r\n    const closeByKey = (evt: KeyboardEvent) => {\r\n        if (evt.code === \"Escape\") return onClose();\r\n    }\r\n\r\n    const onClose = () => {\r\n        if (actionType) return dispatch({type: actionType});\r\n        history.replace({pathname: `/${link}`});\r\n    }\r\n\r\n    return (\r\n            <ModalOverlay onClose={onClose}>\r\n                <div className={styles.body} onClick={(e) => {e.stopPropagation()}}>\r\n                        <button className={styles.button} onClick={onClose}>\r\n                            <CloseIcon type=\"primary\" />\r\n                        </button>\r\n                        {children}\r\n                </div>\r\n            </ModalOverlay>\r\n    );\r\n};\r\n\r\nexport default ModalPopup;","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport styles from './header-link.module.css';\r\nimport { BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IHeaderLink {\r\n    to: string;\r\n    icon: \"EditIcon\" | \"burger\" | \"list\" | \"profile\";\r\n}\r\n\r\nconst HeaderLink: React.FC<IHeaderLink> = ({to, icon, children}) => {\r\n    const match = useRouteMatch(to);\r\n    const imageClass = useMemo(() => match?.isExact ? \"primary\" : \"secondary\", [match]);\r\n    const IconComponent = (icon == 'burger') ? <BurgerIcon type={imageClass} /> : (icon == 'list' ? <ListIcon type={imageClass} /> : <ProfileIcon type={imageClass} />);\r\n    return (\r\n        <NavLink className={styles.link} to={to}>\r\n            {IconComponent}\r\n            <div className=\"m-1\"></div>\r\n            <p className={`text text_type_main-default text_color_inactive ${match?.isExact && styles.active}`}>\r\n                {children}\r\n            </p>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default HeaderLink;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport headerStyles from './app-header.module.css';\r\nimport HeaderLink from '../header-link/header-link';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IAppHeader {}\r\n\r\nconst AppHeader: React.FC<IAppHeader> = () => {\r\n    return (\r\n    <header className={headerStyles.header}>\r\n        <nav className={headerStyles.content}>\r\n            <ul className={headerStyles.list}>\r\n                <HeaderLink to=\"/\" icon={\"burger\"}>\r\n                    Конструктор\r\n                </HeaderLink>\r\n                <HeaderLink to=\"/feed\" icon={\"list\"}>\r\n                    Лента заказов\r\n                </HeaderLink>\r\n            </ul>\r\n\r\n            <Link to=\"/\"><Logo /></Link>\r\n\r\n            <div className={headerStyles.wrapper}>\r\n                <HeaderLink to=\"/profile/edit\" icon={\"profile\"}>\r\n                    Личный профиль\r\n                </HeaderLink>\r\n            </div>\r\n\r\n        </nav>  \r\n    </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","export default __webpack_public_path__ + \"static/media/orderConfirmed.fb9f8534.svg\";","import React from 'react';\r\nimport styles from './order-details.module.css';\r\nimport { useSelector } from '../../services/hooks';\r\nimport orderConfirmedIcon from '../../images/orderConfirmed.svg';\r\n\r\ninterface IOrderDetails {};\r\n\r\nconst OrderDetails: React.FC<IOrderDetails> = () => {\r\n    const {number, orderRequestSent} = useSelector(store => {\r\n        return {\r\n            number: store.order.orderData.number,\r\n            orderRequestSent: store.order.orderRequestSent,\r\n            orderRequestFailed: store.order.orderRequestFailed,\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <>  \r\n        {!orderRequestSent ? \r\n            <>           \r\n                <p className={`text text_type_digits-large ${styles.id}`}>{number || \"Тут будет\"}</p>\r\n                <p className={`text text_type_main-medium ${styles.identification}`}>\r\n                    идентификатор заказа\r\n                </p>\r\n                <img className={styles.image} src={orderConfirmedIcon} alt=\"Order Confirmed\" />\r\n                <p className={`text text_type_main-default ${styles.text}`}>\r\n                    Ваш заказ начали готовить\r\n                </p>\r\n                <p className={`text text_type_main-default text_color_inactive ${styles.text}`}>\r\n                    Дождитесь готовности на орбитальной станции\r\n                </p>\r\n            </>\r\n         : \r\n         <>\r\n            <p className={styles[\"id-s\"]}>123123</p> {/* 's' stands for skeleton */}\r\n            <p className={styles[\"identification-s\"]}>qwdqwdqwdqwdqwdqwd</p>\r\n            <p className={styles[\"text-s\"]}>qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwd</p>\r\n            <p className={styles[\"text-s\"]}>qwdqwdqwdqwdqwdqwd</p>\r\n         </>\r\n        }\r\n    </>\r\n    );\r\n}\r\n\r\nexport default OrderDetails;","import api from '../../utils/api';\r\nimport { resetBurger } from './constructor';\r\nimport { getUsersOrderHistory, IUpdateOrderHistory } from './user';\r\nimport { AppThunk, AppDispatch } from '../types';\r\n\r\nimport { \r\n    OPEN_ORDER_POPUP,\r\n    CLOSE_ORDER_POPUP,\r\n    ORDER_POPUP_REQUEST_PENDING,\r\n    ORDER_POPUP_REQUEST_FAIL,\r\n } from '../constants/index';\r\n \r\nimport { TIngredient } from '../types/data';\r\n\r\ninterface IOrderPending {\r\n    readonly type: typeof ORDER_POPUP_REQUEST_PENDING;\r\n}\r\n\r\ninterface IOrderFail {\r\n    readonly type: typeof ORDER_POPUP_REQUEST_FAIL;\r\n}\r\n\r\ninterface IOrderSuccess {\r\n    readonly type: typeof OPEN_ORDER_POPUP;\r\n    readonly order: {\r\n        readonly name: string;\r\n        readonly number: number;\r\n    };\r\n}\r\n\r\ninterface IOrderClosePopup {\r\n    readonly type: typeof CLOSE_ORDER_POPUP;\r\n}\r\n\r\nexport type TOrderActions = IOrderPending | IOrderFail | IOrderSuccess | IOrderClosePopup;\r\n\r\nexport const handleOrder: AppThunk = (ingredients: ReadonlyArray<TIngredient>, bun: TIngredient, token: string) => (dispatch: AppDispatch) => {\r\n    dispatch({type: ORDER_POPUP_REQUEST_PENDING});\r\n    const data = ingredients.concat([bun, bun]).map((e) => e._id);\r\n    api.handleOrder(data, token)\r\n    .then((res) => {\r\n        if (res && res.success) {\r\n            const {name, order: {number}} = res;\r\n            dispatch({\r\n                type: OPEN_ORDER_POPUP,\r\n                order: {name, number},\r\n            });\r\n            dispatch(resetBurger());\r\n            dispatch(getUsersOrderHistory(token));\r\n        } else { throw new Error(\"Произошла ошибка при создании заказа.\") } \r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({type: ORDER_POPUP_REQUEST_FAIL});\r\n    })\r\n};","import { TIngredient } from \"../types/data\";\r\nimport {\r\n    RESET_BURGER,\r\n    SWAP_INGREDIENTS,\r\n    CHANGE_BURGER_BUN,\r\n    ADD_BURGER_INDREDIENT, \r\n    REMOVE_BURGER_INGREDIENT,\r\n} from '../constants/index';\r\n\r\ninterface IResetBurger {\r\n    readonly type: typeof RESET_BURGER;\r\n}\r\n\r\ninterface IAddIngredient {\r\n    readonly type: typeof CHANGE_BURGER_BUN | typeof ADD_BURGER_INDREDIENT;\r\n    readonly ingredient: TIngredient;\r\n}\r\n\r\ninterface IRemoveIngredient {\r\n    readonly type: typeof REMOVE_BURGER_INGREDIENT;\r\n    readonly index: number;\r\n}\r\n\r\ninterface ISwapIngredients {\r\n    readonly type: typeof SWAP_INGREDIENTS;\r\n    readonly from: number;\r\n    readonly to: number;\r\n}\r\n\r\nexport type TConstructorActions = IResetBurger | IAddIngredient | IRemoveIngredient | ISwapIngredients;\r\n\r\nexport const resetBurger = (): IResetBurger => {\r\n    return {type: RESET_BURGER};\r\n}\r\n\r\nexport const addIngredient = (ingredient: TIngredient): IAddIngredient => {\r\n    return {\r\n        type: ingredient.type === \"bun\" ? CHANGE_BURGER_BUN : ADD_BURGER_INDREDIENT,\r\n        ingredient: ingredient,\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (index: number): IRemoveIngredient => {\r\n    return {\r\n        type: REMOVE_BURGER_INGREDIENT,\r\n        index: index,\r\n    };\r\n}\r\n\r\nexport const swapIngredients = (from: number, to: number): ISwapIngredients => {\r\n    return {type: SWAP_INGREDIENTS, from, to};\r\n}","import React from 'react';\r\nimport styles from './order-submit.module.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { handleOrder } from '../../services/actions/order';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IOrderSubmit {}\r\n\r\nconst OrderSubmit: React.FC<IOrderSubmit> = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const {ingredients, bun, isLoggedIn, token} = useSelector(store => ({\r\n        bun: store.burger.bun,\r\n        ingredients: store.burger.ingredients,\r\n        isLoggedIn: Boolean(store.user.token),\r\n        token: store.user.token,\r\n    }))\r\n\r\n    const sum = useSelector(store => store.burger.priceSum);\r\n    const isValid = useSelector(store => store.burger.isValidBurger);\r\n\r\n    const handleCheckout = () => {\r\n        isLoggedIn ? dispatch(handleOrder(ingredients, bun, token)) : history.replace({pathname: \"/login\"});\r\n    }\r\n\r\n    return (\r\n        <div className={styles.check}>\r\n\r\n            {\r\n            isValid && <>\r\n            <p className=\"text text_type_main-large\">\r\n                {sum}    \r\n            </p>\r\n\r\n            <div className=\"m-1\"></div>\r\n\r\n            <CurrencyIcon type=\"primary\" />\r\n            \r\n            <div className=\"m-3\"></div>\r\n            <Button type=\"primary\" size=\"large\" onClick={handleCheckout}>\r\n                Оформить заказ\r\n            </Button>\r\n            </>}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderSubmit;","import React, { useRef } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport styles from './constructor-item.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport {DragIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { removeIngredient, swapIngredients } from '../../services/actions/constructor';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ninterface IConstructorItem {\r\n    card: TIngredient;\r\n    index: number;\r\n    type?: \"top\" | \"bottom\" | undefined;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst ConstructorItem: React.FC<IConstructorItem> = ({card: ingredient, type = undefined, index, style}) => {\r\n    const id = ingredient._id;\r\n    const ref = useRef<HTMLLIElement>(null);\r\n    const dispatch = useDispatch();\r\n    const {isLocked = false, name, price, image} = ingredient;\r\n\r\n    const handleRemoveElement = () => {\r\n        dispatch(removeIngredient(index));\r\n    }\r\n\r\n    const [, drop] = useDrop({\r\n        accept: \"constructor\",\r\n        hover(item: TIngredient, monitor) {\r\n            const [dragIndex = 0, hoverIndex = 0] = [item.index, index];\r\n            if (dragIndex === hoverIndex) return;\r\n            // Все проверки в переменных для typescript\r\n            const hoverBoundingRect = (ref && ref.current?.getBoundingClientRect());\r\n            const hoverMiddleY = (hoverBoundingRect && (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2);\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = (clientOffset && hoverBoundingRect && clientOffset.y - hoverBoundingRect.top);\r\n            if (hoverClientY && hoverMiddleY && dragIndex < hoverIndex && hoverClientY < hoverMiddleY) return;\r\n            if (hoverClientY && hoverMiddleY && dragIndex > hoverIndex && hoverClientY > hoverMiddleY) return;\r\n            dispatch(swapIngredients(dragIndex, hoverIndex));\r\n            item.index = hoverIndex;\r\n        }\r\n    });\r\n\r\n    const [{isDragging}, drag] = useDrag({\r\n        type: \"constructor\",\r\n        item: {id, index},\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n            <li ref={!isLocked ? ref : null} className={styles.card} style={{...style, opacity: isDragging ? 0 : 1}} draggable={!isLocked}> {/* wrapper */ }\r\n                    {  !isLocked &&\r\n                    <>\r\n                        <DragIcon type=\"primary\" />\r\n                        <div className=\"m-1\"></div>\r\n                    </>}\r\n                    <ConstructorElement handleClose={handleRemoveElement} type={type} isLocked={isLocked} text={name} price={price} thumbnail={image} /> {/* Создать свой констрактор елемент для мобилок */}\r\n            </li>\r\n    );\r\n}\r\n\r\nexport default ConstructorItem;","import { useDrop } from \"react-dnd\";\r\nimport { useMemo } from 'react';\r\nimport styles from './burger-constructor.module.css';\r\nimport OrderSubmit from '../order-submit/order-submit';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport ConstructorItem from '../constructor-item/constructor-item';\r\nimport { addIngredient } from '../../services/actions/constructor';\r\nimport { TIngredient } from \"../../services/types/data\";\r\n\r\nconst BurgerConstructor = () => {\r\n    const dispatch = useDispatch();\r\n    const bun = useSelector(store => store.burger.bun);\r\n    const ingredients = useSelector(store => store.burger.ingredients);\r\n\r\n    const isBunValid = useMemo(() => Boolean(bun), [bun]);\r\n\r\n    const [, constructorTarget] = useDrop({\r\n        accept: [\"bun\", \"sauce\", \"main\"],\r\n        drop(item: {ingredient: TIngredient}) {\r\n            dispatch(addIngredient(item.ingredient));\r\n        }\r\n    });\r\n\r\n    return (\r\n        <section className={styles.maker} ref={constructorTarget}>\r\n            { isBunValid || ingredients.length ? \r\n                <>\r\n                <ul className={styles.list}>\r\n\r\n                    {bun && isBunValid ? <ConstructorItem index={-2} style={{margin: \"0 15px 15px 0\"}} type=\"top\" card={{...bun, isLocked: true, name: bun.name + \" (верх)\"}} /> : ''}\r\n\r\n                    <div className={styles.content}>\r\n                            {ingredients.map((ingredient: TIngredient, index: number) => {     \r\n                                return <ConstructorItem card={ingredient} key={ingredient.index} index={index}/>\r\n                            })}\r\n                    </div>\r\n\r\n                    {bun && isBunValid ? <ConstructorItem index={-1} style={{padding: \"0 16px 0 0\"}} type=\"bottom\" card={{...bun, isLocked: true, name: bun.name + \" (низ)\"}} /> : ''}\r\n\r\n                </ul>\r\n                <OrderSubmit />\r\n                </>\r\n            : \r\n                <p className={`text text_type_main-large ${styles.none}`}>\r\n                    Выбирайте ингредиенты и составьте себе бургер\r\n                </p>\r\n            }\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default BurgerConstructor;","import React from 'react';\r\nimport tab from './tab.module.css';\r\n// Сделано, чтобы поменять css стили\r\nexport const Tab: React.FC<{\r\n    active: boolean;\r\n    value: string;\r\n    onClick: (value: string) => void;\r\n}> = ({ active, value, children, onClick: handleClick }) => {\r\n    const className = `${tab.tab} ${active ? tab.tab_type_current : ''}`;\r\n    const onClick = React.useCallback(() => {\r\n        if (typeof handleClick === 'function') {\r\n            handleClick(value);\r\n        }\r\n    }, [handleClick, value]);\r\n\r\n    return (\r\n        <div className={`${className} pt-4 pr-10 pb-4 pl-10 noselect`} onClick={onClick}>\r\n            <span className=\"text text_type_main-default\">{children}</span>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport styles from './burger-ingredient-skeleton.module.css';\r\n\r\ninterface IBurgerIngredientSkeleton {};\r\n\r\nconst BurgerIndredientSkeleton: React.FC<IBurgerIngredientSkeleton> = () => {\r\n    return (\r\n            <li className={styles.card}>\r\n                <div className={styles.image}></div>\r\n                <div className={styles.price}>\r\n                    <span className={styles.money}>125125</span>\r\n                    <div className={styles.icon}></div>\r\n                </div>\r\n                <span className={styles.name}>qwdqwdqwdqwdqwdqwd</span>\r\n                <span className={styles.name}>qwdqwdqwd</span>\r\n            </li>\r\n    );\r\n}\r\n\r\nexport default BurgerIndredientSkeleton;","import { FC } from 'react';\r\nimport styles from './burger-skeletons.module.css';\r\nimport BurgerIndredientSkeleton from '../burger-ingredient-skeleton/burger-ingredient-skeleton';\r\n\r\ninterface IBurgerSkeletons {};\r\n\r\nconst BurgerSkeletons: FC<IBurgerSkeletons> = () => {\r\n    const array = Array(4).fill(null).map((u, i) => i);\r\n    return (\r\n        <>\r\n            <span className={styles.title}>qwdqwdqwd</span>\r\n            <div className={styles.section}>\r\n                {array.map((el, i) => <BurgerIndredientSkeleton key={i} />)}\r\n            </div>\r\n            <span className={styles.title}>qwdqwdqwd</span>\r\n            <div className={styles.section}>\r\n                {array.map((el, i) => <BurgerIndredientSkeleton key={i} />)}\r\n            </div>\r\n            <span className={styles.title}>qwdqwdqwd</span>\r\n            <div className={styles.section}>\r\n                {array.map((el, i) => <BurgerIndredientSkeleton key={i} />)}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BurgerSkeletons;","import React from 'react';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\nimport styles from './burger-ingredient.module.css';\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { TIngredient } from \"../../services/types/data\";\r\n\r\ninterface IBurgerIngredient {\r\n    ingredient: TIngredient;\r\n}\r\n\r\nconst BurgerIngredient: React.FC<IBurgerIngredient> = ({ingredient}) => {\r\n    const location = useLocation();\r\n    \r\n    const {name, price, type, image, image_mobile, _id} = ingredient;\r\n    const {mobile, count} = useSelector(store => ({\r\n        count: store.burger.bun && (type === \"bun\" ? store.burger.bun._id === _id && 2 : store.burger.ingredients.filter((ingredient: TIngredient)=> ingredient._id === _id).length), // mb not the best decision \r\n        mobile: store.config.isMobileIngredients,\r\n    }));\r\n\r\n    const [, dragRef] = useDrag({\r\n        type: type,\r\n        item: {ingredient},\r\n        collect: monitor => ({\r\n            isDragging: monitor.isDragging(),\r\n        })\r\n    });\r\n\r\n    return (\r\n        <Link to={{pathname: `/ingredients/${_id}`, state: { background: location}}} className={styles.link}>\r\n            <li className={styles.card} draggable ref={dragRef}> {/* onClick={addIngredient} */}\r\n                <img className={styles.image} alt={`${name}`} src={mobile ? image_mobile : image} draggable={false} />\r\n                <div className={styles.price}>\r\n                    <span className={`text text_type_main-medium ${styles.money}`}>\r\n                        {price}\r\n                    </span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <p className={`text text_type_main-small ${styles.name}`}>\r\n                    {name}\r\n                </p>\r\n                {count && <div className={styles.wrapper}><Counter count={count} size=\"default\" /></div>}\r\n            </li>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport styles from './ingredients-category.module.css';\r\nimport BurgerIngredient from '../burger-ingredient/burger-ingredient';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ninterface IIngredientsCategory {\r\n    title: string;\r\n}\r\n\r\nconst IngredientsCategory = React.forwardRef<HTMLDivElement, IIngredientsCategory>(({title}, ref) => {\r\n\r\n    const {ingredients} = useSelector((store) => ({\r\n      ingredients: title === \"Булки\" ? store.ingredients.buns : title === \"Соусы\" ? store.ingredients.sauces : store.ingredients.mains,\r\n    }));\r\n\r\n    return (\r\n        <div className={styles.container} ref={ref}>\r\n            <h3 className={`text text_type_main-medium ${styles.name}`}>\r\n                {title}\r\n            </h3>\r\n            <ul className={styles.list}>\r\n                  {ingredients.map((ingredient: TIngredient) => {\r\n                    return <BurgerIngredient ingredient={ingredient} key={ingredient._id} />\r\n                   })}\r\n            </ul>\r\n        </div>)\r\n})\r\n\r\nexport default IngredientsCategory;","import React from 'react';\r\n\r\nimport {Tab} from '../tab/tab';\r\nimport { useSelector } from '../../services/hooks';\r\nimport styles from './burger-ingredients.module.css';\r\nimport { useRef, useState, memo, useCallback } from 'react';\r\nimport BurgerSkeletons from '../burger-skeletons/burger-skeletons';\r\nimport IngredientsCategory from '../ingredients-category/ingredients-category';\r\n\r\ninterface IBurgerIngredients {};\r\n\r\nconst BurgerIngredients = memo<IBurgerIngredients>(() => {\r\n\r\n    const {ingredientsRequestSent, ingredientsRequestFailed} = useSelector(store => {\r\n      return {\r\n        ingredientsRequestSent: store.ingredients.ingredientsRequestSent,\r\n        ingredientsRequestFailed: store.ingredients.ingredientsRequestFailed,\r\n      }\r\n    })\r\n\r\n    const bunsRef = useRef(null);\r\n    const sauceRef = useRef(null);\r\n    const mainRef = useRef(null);\r\n  \r\n    const [selectedMeal, setSelectedMeal] = useState(\"buns\");\r\n\r\n    const handleMealChange = useCallback((evt) => {\r\n        setSelectedMeal(evt);\r\n    }, []);\r\n    \r\n    const handleScroll = () => {\r\n      if (ingredientsRequestSent || ingredientsRequestFailed) return;\r\n      // @ts-ignore\r\n      const buns = bunsRef.current.getBoundingClientRect();\r\n      // @ts-ignore\r\n      const sauces = sauceRef.current.getBoundingClientRect();\r\n      buns.y <= 0 ? (sauces.y <= 0 ? setSelectedMeal('main') : setSelectedMeal('sauce')): setSelectedMeal('buns');\r\n    }\r\n\r\n    return (\r\n        <section className={styles.menu}>\r\n            <p className={`text text_type_main-large ${styles.title}`}>\r\n                Соберите бургер\r\n            </p>\r\n            <div className={styles.tab}>\r\n              <Tab value=\"buns\" active={selectedMeal === 'buns'} onClick={handleMealChange}>\r\n                Булки\r\n              </Tab>\r\n              <Tab value=\"sauce\" active={selectedMeal === 'sauce'} onClick={handleMealChange}>\r\n                Соусы\r\n              </Tab>\r\n              <Tab value=\"main\" active={selectedMeal === 'main'} onClick={handleMealChange}>\r\n                Начинки\r\n              </Tab>\r\n            </div>\r\n            <section className={styles.page} id=\"ingredient-scroll\" onScroll={handleScroll}>\r\n                {!ingredientsRequestSent  && !ingredientsRequestFailed ? \r\n                <>\r\n                  <IngredientsCategory title=\"Булки\" ref={bunsRef} />\r\n                  <IngredientsCategory title=\"Соусы\" ref={sauceRef} />\r\n                  <IngredientsCategory title=\"Начинки\" ref={mainRef} />\r\n                </>\r\n                :\r\n                ingredientsRequestSent ?\r\n                  <BurgerSkeletons /> // Network throttling to see effect :DDDD\r\n                :\r\n                  <BurgerSkeletons /> \r\n                }\r\n            </section>\r\n        </section>\r\n    );\r\n});\r\n\r\nexport default BurgerIngredients;","import { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\n\r\nconst MainPage = () => {\r\n    return (\r\n        <DndProvider backend={HTML5Backend}>\r\n              <BurgerIngredients />\r\n              <BurgerConstructor />\r\n        </DndProvider>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport styles from './digit-display.module.css';\r\n\r\ntype TDigitDisplay = {\r\n    title: string;\r\n    number: number;\r\n}\r\n\r\nexport const DigitDisplay: React.FC<TDigitDisplay> = ({number, title}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <p className={`text text_type_main-default`}>{title}</p>\r\n            <p className={`text text_type_digits-large ${styles.shadow}`}>{number}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { TOrder } from '../../services/types/data';\r\nimport styles from './orders-collection.module.css';\r\n\r\ninterface IOrdersCollection {\r\n    title: string;\r\n    extraClassName?: string;\r\n    list: ReadonlyArray<number>\r\n}\r\n\r\nconst OrdersCollection: React.FC<IOrdersCollection> = ({title, extraClassName, list = []}) => {\r\n    if (!list) return null;\r\n    return (\r\n        <div className={styles.container}>\r\n            <p className={`text text_type_main-medium ${styles.title}`}>{title}:</p>\r\n            <ul className={styles.list}>\r\n                { list.length ? \r\n                (\r\n                    list.map((el, i) => {\r\n                        return <li className={styles.element} key={i}><p className={`text text_type_digits-default ${extraClassName}`}>{el}</p></li>;\r\n                    })\r\n                )\r\n                :\r\n                <p className=\"text text_type_main-default\">Нет заказов</p>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrdersCollection;","import { useSelector } from '../../services/hooks';\r\nimport { TOrder } from '../../services/types/data';\r\nimport { DigitDisplay } from '../digit-display/digit-display';\r\nimport OrdersCollection from '../orders-collection/orders-collection';\r\nimport styles from './statistics.module.css';\r\n\r\nconst resizeArray = (array: ReadonlyArray<number>, lenght: number) => {\r\n    const ans = [];\r\n    for (let i = 0; i < lenght; ++i) {\r\n        array[i] && ans.push(array[i]);\r\n    }\r\n    return ans;\r\n}\r\n\r\nconst Statistics = () => {\r\n\r\n    const {total, totalToday, doneOrders, pendingOrders} = useSelector(store => {\r\n        return {\r\n            total: store.feed.total,\r\n            totalToday: store.feed.totalToday,\r\n            doneOrders: resizeArray(store.feed.feed.filter((order: TOrder) => order.status === \"done\").map((order: TOrder) => order.number), 10),\r\n            pendingOrders: resizeArray(store.feed.feed.filter((order: TOrder) => order.status !== \"done\").map((order: TOrder) => order.number), 10),\r\n        }\r\n    })\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n            <div className={styles.orders}>\r\n                <OrdersCollection title={\"Готовы\"} list={doneOrders} extraClassName={styles.green} />\r\n                <OrdersCollection title={\"В работе\"} list={pendingOrders} />\r\n            </div>\r\n            <DigitDisplay title={\"Выполнено за все время:\"} number={total || 0} />\r\n            <DigitDisplay title={\"Выполнено за сегодня:\"} number={totalToday || 0} />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Statistics;","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n  } from '../constants/index';\r\n\r\n\r\ninterface IAddSocket {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    readonly payload?: string;\r\n}\r\n\r\ninterface IConfirmSocket {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\ninterface ISocketError {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\n\r\ninterface ICloseSocket {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\ninterface IRemoveSocket {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport type TSocketActions = IAddSocket | IRemoveSocket | IConfirmSocket | ISocketError | ICloseSocket; // for future maybe \r\n\r\nexport function addSocketConnection(url: string) {\r\n    return {type: WS_CONNECTION_START, payload: url};\r\n}\r\n\r\nexport function removeSocketConnection() {\r\n    return {type: WS_CONNECTION_CLOSED}\r\n}","import { useEffect } from 'react';\r\nimport styles from './feed.module.css';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport OrderList from '../../components/orders-list/orders-list';\r\nimport Statistics from '../../components/statistics/statistics';\r\nimport { addSocketConnection, removeSocketConnection } from '../../services/actions/socket';\r\n\r\nconst url: string = 'wss://norma.nomoreparties.space/orders/all';\r\n\r\nconst Feed = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { feed } = useSelector(store => store.feed);\r\n    \r\n    useEffect(() => {\r\n        dispatch(addSocketConnection(url));\r\n        return () => {removeSocketConnection()};\r\n    }, [])\r\n\r\n    return (\r\n        <section className={styles.container}>\r\n        <div className={styles.orders}>\r\n            <p className=\"text text_type_main-medium\">\r\n                Лента заказов\r\n            </p>\r\n            <OrderList orders={feed} />\r\n        </div>\r\n            <Statistics />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React, { useEffect, useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {CurrencyIcon} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './order-summary.module.css';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport IngredientIcon from '../ingredient-icon/ingredient-icon';\r\nimport { addSocketConnection } from '../../services/actions/socket';\r\n\r\nimport { TIngredient, TOrder } from '../../services/types/data';\r\n\r\nconst wsUrl: string = 'wss://norma.nomoreparties.space/orders/all';\r\n\r\ninterface IOrderSummary {};\r\n\r\nconst OrderSummary: React.FC<IOrderSummary> = () => {\r\n    const { id } = useParams<{id?: string}>();\r\n    const { url } = useRouteMatch();\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const {orders, initialIngredients} = useSelector(store => {\r\n        return {\r\n            orders: url.includes(\"profile\") ? store.user.orderHistory : store.feed.feed,\r\n            initialIngredients: [...store.ingredients.buns, ...store.ingredients.sauces, ...store.ingredients.mains],\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!orders.length) {\r\n            dispatch(addSocketConnection(wsUrl))\r\n        };\r\n    }, [])\r\n\r\n    const selectedOrder = useMemo(() => {\r\n        return orders.find((order: TOrder) => order._id == id);\r\n    }, [orders, id]);\r\n\r\n    \r\n    const displayedData = useMemo(() => {\r\n        const data: Array<TIngredient> = [];\r\n        if (!selectedOrder) return data;\r\n        const ingredients: any = selectedOrder.ingredients.map((ingredient: string) => { // no duplicates\r\n            return initialIngredients.find((el: TIngredient) => el._id === ingredient);\r\n        });\r\n        ingredients.forEach((ingredient: TIngredient | undefined) => {\r\n            if (!ingredient) return;\r\n            const count = ingredient.type === \"bun\" ? 2 : ingredients.filter((element: TIngredient) => element._id === ingredient._id).length;\r\n            const newData: TIngredient = {...ingredient, count};\r\n            !data.find((element) => element._id === ingredient._id) && data.push(newData);\r\n        })\r\n        return data;\r\n    }, [orders]);\r\n    \r\n    const colorClassName = useMemo(() => selectedOrder && selectedOrder.status === 'done' ? styles.green : '',[selectedOrder]);\r\n\r\n    const price = useMemo(() => displayedData.reduce((acc, val) => acc + (val.price * (val.count || 1)), 0), [displayedData]);\r\n\r\n    // if (!selectedOrder) return null;\r\n    return (\r\n            selectedOrder ? \r\n            <section className={styles.container}>\r\n                <p className={`text text_type_digits-default ${styles.id}`}>#{selectedOrder.number}</p>\r\n                <h2 className={`text text_type_main-medium ${styles.name}`}>{selectedOrder.name}</h2>\r\n                <p className={`text text_type_main-small ${styles.status} ${colorClassName}`}>{selectedOrder.status === 'done' ? 'Выполнен' : 'Готовится'}</p> {/* не понятно какие ещё статусы есть */}\r\n                <p className={`text text_type_main-medium`}>Состав:</p>\r\n                <ul className={styles.list}>\r\n                    {\r\n                        displayedData.map((ingredient) => {\r\n                            return (\r\n                                <li className={styles.item} key={ingredient._id}>\r\n                                    <IngredientIcon ingredient={ingredient} />\r\n                                    <p className={`text text_type_main-default ${styles.ingredient}`}>{ingredient.name}</p>\r\n                                    <div className={styles.check}>\r\n                                        <p className={`text text_type_digits-default`}>{ingredient.count} x {ingredient.price}</p>\r\n                                        <CurrencyIcon type=\"primary\" />\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className={styles.footer}>\r\n                    <p className={`text text_type_main-default text_color_inactive`}>{selectedOrder.createdAt}</p>\r\n                    <div className={styles.price}>\r\n                        <p className=\"text text_type_digits-default\">{price}</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            :\r\n            <p className={`text text_type_main-large`}>Заказ не найдён. Возможно он не ваш</p>\r\n    );\r\n}\r\n\r\nexport default OrderSummary;","import api from '../../utils/api';\r\nimport { useCallback, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { CLOSE_ORDER_POPUP } from '../../services/constants/index';\r\nimport { ProtectedRoute } from '../protected-route.js/protected-route';\r\n\r\nimport { SignIn, SignUp, MainPage, UserProfile, ResetPassword, ForgotPassword, IngredientDetails, ModalPopup, AppHeader, OrderDetails } from '../../pages';\r\n\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\n\r\nimport {\r\n  getIngredients\r\n} from '../../services/actions/ingredients';\r\n\r\nimport styles from './app.module.css';\r\nimport { getUsersOrderHistory, updateToken } from '../../services/actions/user';\r\nimport Feed from '../../pages/feed/feed';\r\nimport OrderSummary from '../order-summary/order-summary';\r\nimport { getLocalStorageKey } from '../../utils/use-local-storage';\r\n\r\nimport { IHistoryState, ILocationState } from '../../services/types/data';\r\n\r\nfunction App() {\r\n  const history: IHistoryState = useHistory();\r\n  const location: ILocationState = useLocation();\r\n\r\n  const background = (history.action === \"PUSH\" || history.replace === \"REPLACE\") && location.state && location.state.background;\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const {token, loggedIn, isOrderPopupOpen} = useSelector(state => ({\r\n    token: state.user.token,\r\n    loggedIn: Boolean(state.user.token),\r\n    isOrderPopupOpen: state.order.orderPopupOpen,\r\n  }));\r\n\r\n  // const {width} = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    dispatch(getIngredients());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) dispatch(getUsersOrderHistory(token));\r\n  }, [token])\r\n\r\n  // useEffect(() => {\r\n  //     dispatch({type: SWITCH_IS_MOBILE_VALUE, value: width});\r\n  // }, [dispatch, width]);\r\n\r\n  useEffect(() => {\r\n    const oldToken = getLocalStorageKey(\"token\");\r\n    if (oldToken && !loggedIn) return attemptLogin(oldToken);\r\n  }, []);\r\n\r\n  const attemptLogin = useCallback(refreshToken => {\r\n    dispatch(updateToken(refreshToken));\r\n  }, [history, dispatch, api]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      const previousPage = history.location.pathname;\r\n      return history.replace({pathname: previousPage});\r\n    }\r\n  }, [loggedIn])\r\n\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main className={styles.main}>\r\n        <Switch>\r\n          <Route path=\"/login\" exact={true}>\r\n            <SignIn />\r\n          </Route>\r\n          <Route path=\"/register\" exact={true}>\r\n            <SignUp />\r\n          </Route>\r\n          <Route path=\"/forgot-password\" exact={true}>\r\n            <ForgotPassword />\r\n          </Route>\r\n          <Route path=\"/reset-password\" exact={true}>\r\n            <ResetPassword />\r\n          </Route>\r\n          {!background && <Route path=\"/ingredients/:id\" exact={true}>\r\n            <section className={styles.center}>\r\n              <IngredientDetails />\r\n            </section>\r\n          </Route>}\r\n          {!background && \r\n          <Route path=\"/feed/:id\" exact={true}>\r\n            <section className={styles.center}>\r\n              <OrderSummary />\r\n            </section>\r\n          </Route>}\r\n          <Route path=\"/feed\">\r\n            <Feed />\r\n          </Route>\r\n          <ProtectedRoute exact path={\"/profile/orders/:id\"}>\r\n            <section className={styles.center}>\r\n              <OrderSummary />\r\n            </section>\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path=\"/profile\">\r\n            <UserProfile />\r\n          </ProtectedRoute>\r\n          <Route path=\"/\">\r\n            <MainPage />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n\r\n      {isOrderPopupOpen &&\r\n        <ModalPopup actionType={CLOSE_ORDER_POPUP}>\r\n          <OrderDetails />\r\n        </ModalPopup>\r\n      }\r\n\r\n      {background && \r\n      <Route path=\"/ingredients/:id\" exact={true}>\r\n        <ModalPopup actionType={null}>\r\n            <IngredientDetails />\r\n        </ModalPopup>\r\n      </Route>\r\n      }\r\n\r\n      {background && \r\n      <Route path=\"/feed/:id\" exact={true}>\r\n        <ModalPopup actionType={null} link={\"feed\"}>\r\n            <OrderSummary />\r\n        </ModalPopup>\r\n      </Route>\r\n      }\r\n      \r\n      \r\n      {background && \r\n      <Route path=\"/profile/orders/:id\" exact={true}>\r\n        <ModalPopup actionType={null} link={\"profile/orders\"}>\r\n            <OrderSummary />\r\n        </ModalPopup>\r\n      </Route>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import api from '../../utils/api';\r\n\r\nimport {\r\n  INGREDIENT_REQUEST_FAIL,\r\n  INGREDIENT_REQUEST_PENDING,\r\n  INGREDIENT_REQUEST_SUCCESS,\r\n} from '../constants/index';\r\n\r\nimport { AppThunk, AppDispatch } from '../types';\r\nimport { TIngredient } from '../types/data';\r\n\r\ninterface IIngredientsPending {\r\n  readonly type: typeof INGREDIENT_REQUEST_PENDING;\r\n}\r\n\r\ninterface IIngredientsFail {\r\n  readonly type: typeof INGREDIENT_REQUEST_FAIL;\r\n}\r\n\r\ninterface IIngredientsSuccess {\r\n  readonly type: typeof INGREDIENT_REQUEST_SUCCESS;\r\n  readonly ingredients: ReadonlyArray<TIngredient>;\r\n}\r\n\r\nexport type TIngredientsActions = IIngredientsPending | IIngredientsFail | IIngredientsSuccess;\r\n\r\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({type: INGREDIENT_REQUEST_PENDING});\r\n    api.getIngredients()\r\n    .then((res) => {\r\n      if (res.data && res.success) return dispatch({type: INGREDIENT_REQUEST_SUCCESS, ingredients: res.data});\r\n      throw new Error(\"Произошла ошибка при получении ингредиентов.\");\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({type: INGREDIENT_REQUEST_FAIL});\r\n    })\r\n};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { \r\n    OPEN_ORDER_POPUP,\r\n    CLOSE_ORDER_POPUP,\r\n    ORDER_POPUP_REQUEST_PENDING,\r\n    ORDER_POPUP_REQUEST_FAIL,\r\n } from '../constants/index';\r\n\r\nimport { TOrderActions } from '../actions/order';\r\n\r\ntype TOrderState = {\r\n    orderData: {name: string, number: number};\r\n    orderPopupOpen: boolean;\r\n    orderRequestSent: boolean;\r\n    orderRequestFailed: boolean;\r\n}\r\n\r\nexport const initialState: TOrderState = {\r\n    orderData: {name: '', number: 0},\r\n    orderPopupOpen: false,\r\n    orderRequestSent: false,\r\n    orderRequestFailed: false,\r\n}\r\n\r\nexport const orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\r\n    switch (action.type) {\r\n        case OPEN_ORDER_POPUP : {\r\n            return {...state, orderPopupOpen: true, orderData: action.order, orderRequestFailed: false, orderRequestSent: false};\r\n        }\r\n        case ORDER_POPUP_REQUEST_PENDING : {\r\n            return {...state, orderRequestFailed: false, orderRequestSent: true, orderPopupOpen: true} // Will show skeleton ui when pending\r\n        }\r\n        case ORDER_POPUP_REQUEST_FAIL : {\r\n            return {...state, orderRequestFailed: true, orderRequestSent: false}\r\n        }\r\n        case CLOSE_ORDER_POPUP : {\r\n            return {...state, orderPopupOpen: false};\r\n        }\r\n        default: \r\n            return state;   \r\n    }\r\n}","import { TIngredientsActions } from '../actions/ingredients';\r\nimport {\r\n    INGREDIENT_REQUEST_FAIL,\r\n    INGREDIENT_REQUEST_PENDING,\r\n    INGREDIENT_REQUEST_SUCCESS,\r\n} from '../constants/index';\r\nimport { TIngredient } from '../types/data';\r\n\r\nexport type TIngredientsState = {\r\n    buns: ReadonlyArray<TIngredient>;\r\n    sauces: ReadonlyArray<TIngredient>;\r\n    mains: ReadonlyArray<TIngredient>;\r\n\r\n    ingredientsRequestSent: boolean;\r\n    ingredientsRequestFailed: boolean;\r\n}\r\n\r\nexport const initialState: TIngredientsState = {\r\n    buns: [],\r\n    sauces: [],\r\n    mains: [],\r\n\r\n    ingredientsRequestSent: false,\r\n    ingredientsRequestFailed: false,\r\n}\r\n\r\nexport const ingredientReducer = (state = initialState, action: TIngredientsActions): TIngredientsState => {\r\n    switch(action.type) {\r\n        case INGREDIENT_REQUEST_PENDING : {\r\n            return {\r\n                ...state,\r\n                ingredientsRequestSent: true,\r\n                ingredientsRequestFailed: false,\r\n            }\r\n        }\r\n        case INGREDIENT_REQUEST_FAIL : {\r\n            return {\r\n                ...state,\r\n                ingredientsRequestSent: false,\r\n                ingredientsRequestFailed: true,\r\n            }\r\n        }\r\n        case INGREDIENT_REQUEST_SUCCESS : {\r\n            console.log(action.ingredients);\r\n            return {\r\n                ...state,\r\n                ingredientsRequestSent: false,\r\n                ingredientsRequestFailed: false,\r\n                buns: action.ingredients.filter((item) => item.type === 'bun'),\r\n                sauces: action.ingredients.filter((item) => item.type === 'sauce'),\r\n                mains: action.ingredients.filter((item) => item.type === 'main'),\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { TConstructorActions } from '../actions/constructor';\r\nimport {\r\n    RESET_BURGER,\r\n    SWAP_INGREDIENTS,\r\n    CHANGE_BURGER_BUN,\r\n    ADD_BURGER_INDREDIENT, \r\n    REMOVE_BURGER_INGREDIENT,\r\n} from '../constants/index';\r\nimport { TIngredient } from '../types/data';\r\n\r\nexport type TConstructorState = {\r\n    bun: TIngredient | null; // may be no bun\r\n    ingredients: ReadonlyArray<TIngredient>\r\n    index: number;\r\n    priceSum: number;\r\n    isValidBurger: boolean;\r\n}\r\n\r\nexport const initialState: TConstructorState = {\r\n    index: 0,\r\n    bun: null,\r\n    ingredients: [],\r\n    isValidBurger: false,\r\n    priceSum: 0,\r\n}\r\n\r\nconst calculateSum = (bun: TIngredient, ingredients: ReadonlyArray<TIngredient>): number => {\r\n    return ingredients.reduce((acc, ingredient) => acc + ingredient.price, 0) + (Object.keys(bun).length ? bun.price * 2 : 0);\r\n}\r\n\r\nexport const constructorReducer = (state = initialState, action: TConstructorActions): TConstructorState => {   \r\n    switch (action.type) {\r\n        case CHANGE_BURGER_BUN : {\r\n            return {...state, bun: action.ingredient, priceSum: calculateSum(action.ingredient, state.ingredients), isValidBurger: true};\r\n        }\r\n        case ADD_BURGER_INDREDIENT : {\r\n            const updatedIngredients = [...state.ingredients, {...action.ingredient, index: state.index}];\r\n            return {...state, ingredients: updatedIngredients, priceSum: state.bun ? calculateSum(state.bun, updatedIngredients) : 0, index: state.index + 1};\r\n        }\r\n        case REMOVE_BURGER_INGREDIENT : {\r\n            const updatedIngredients = state.ingredients.filter((_, index) => index !== action.index);\r\n            return {...state, ingredients: updatedIngredients, priceSum: state.bun ? calculateSum(state.bun, updatedIngredients) : 0};\r\n        }\r\n        case SWAP_INGREDIENTS : {\r\n            const newIngredients = [...state.ingredients];\r\n            const [ dragIndex, hoverIndex ] = [action.from, action.to];\r\n            newIngredients.splice(dragIndex, 1);\r\n            newIngredients.splice(hoverIndex, 0, state.ingredients[dragIndex]);\r\n            return { ...state, ingredients: newIngredients };\r\n        }\r\n        case RESET_BURGER : {\r\n            return {...state, ingredients: [], bun: null};\r\n        }\r\n        default:\r\n            return state;\r\n    } \r\n}","import { TUserActions } from '../actions/user';\r\nimport { \r\n    LOGOUT,\r\n    UPDATE_USER_INFO,\r\n    UPDATE_ACCESS_TOKEN,\r\n    UPDATE_ORDER_HISTORY,\r\n} from '../constants/index';\r\nimport { TOrder } from '../types/data';\r\n\r\ntype TUserState = {\r\n    email: string;\r\n    name: string;\r\n    orderHistory: ReadonlyArray<TOrder>;\r\n    token: string | null;\r\n}\r\n\r\nexport const initialState: TUserState = {\r\n    email: '',\r\n    name: '',\r\n\r\n    orderHistory: [],\r\n\r\n    token: null, // starts with bearer\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: TUserActions): TUserState => {\r\n    switch (action.type) {\r\n        case LOGOUT : {\r\n            return initialState;\r\n        }\r\n        case UPDATE_USER_INFO : {\r\n            return {...state, email: action.email, name: action.name};\r\n        }\r\n        case UPDATE_ACCESS_TOKEN : {\r\n            return {...state, token: action.token};\r\n        }\r\n        case UPDATE_ORDER_HISTORY : {\r\n            return {...state, orderHistory: action.orders};\r\n        }\r\n        default: \r\n            return state;   \r\n    }\r\n}","import { TFeedActions } from '../actions/feed';\r\nimport { \r\n    FEED_REQUEST_FAIL,\r\n    FEED_REQUEST_PENDING,\r\n    FEED_REQUEST_SUCCESS,\r\n } from '../constants/index';\r\n\r\nimport { TOrder } from '../types/data';\r\n\r\n\r\ntype TFeedState = {\r\n    feed: ReadonlyArray<TOrder>\r\n    total: number;\r\n    totalToday: number;\r\n    feedRequestSent: boolean;\r\n    feedRequestFailed: boolean;\r\n}\r\n\r\nexport const initialState: TFeedState = {\r\n    feed: [],\r\n\r\n    total: 0,\r\n    totalToday: 0,\r\n\r\n    feedRequestSent: false,\r\n    feedRequestFailed: false,\r\n}\r\n\r\nexport const feedReducer = (state = initialState, action: TFeedActions): TFeedState => {\r\n    switch (action.type) {\r\n        case FEED_REQUEST_SUCCESS : {\r\n            return {...state, feed: action.feed, total: action.total, totalToday: action.totalToday};\r\n        }\r\n        case FEED_REQUEST_FAIL : {\r\n            return {...state, feedRequestSent: false, feedRequestFailed: true};\r\n        }\r\n        case FEED_REQUEST_PENDING : {\r\n            return {...state, feedRequestSent: true, feedRequestFailed: false};\r\n        }\r\n        default: \r\n            return state;   \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { SWITCH_IS_MOBILE_VALUE, CLOSE_HEADER_POPUP, OPEN_HEADER_POPUP } from '../constants/index';\r\n\r\nimport { orderReducer } from './order-reducer';\r\nimport { ingredientReducer } from './ingredients-reducer';\r\nimport { constructorReducer } from './constructor-reducer';\r\nimport { userReducer } from './user-reducer';\r\nimport { feedReducer } from './feed-reducer';\r\n\r\nimport { TIndexActions } from '../actions';\r\n\r\ntype TIndexState = {\r\n    headerPopupOpen: boolean;\r\n    isMobileHeader: boolean;\r\n    isMobileIngredients: boolean;\r\n}\r\n\r\nconst initialState: TIndexState = {\r\n    headerPopupOpen: false,\r\n    isMobileHeader: false,\r\n    isMobileIngredients: false,\r\n}\r\n\r\nconst globalConfig = (state = initialState, action: TIndexActions): TIndexState => {\r\n    switch (action.type) {\r\n        case OPEN_HEADER_POPUP : {\r\n            return {...state, headerPopupOpen: true};\r\n        }\r\n        case CLOSE_HEADER_POPUP : {\r\n            return {...state, headerPopupOpen: false};\r\n        }\r\n        case SWITCH_IS_MOBILE_VALUE : {\r\n            return {...state, isMobileIngredients: action.value <= 1250, isMobileHeader: Boolean(action.value <= 1240)};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientReducer,\r\n    config: globalConfig,\r\n    burger: constructorReducer,\r\n    order: orderReducer,\r\n    feed: feedReducer,\r\n    user: userReducer,\r\n});","import api from '../../utils/api';\r\nimport { AppThunk, AppDispatch } from '../types';\r\n\r\nimport { \r\n    FEED_REQUEST_FAIL,\r\n    FEED_REQUEST_PENDING,\r\n    FEED_REQUEST_SUCCESS,\r\n} from '../constants/index';\r\nimport { TOrder } from '../types/data';\r\n\r\ninterface IFeedPending {\r\n    readonly type: typeof FEED_REQUEST_PENDING;\r\n}\r\n\r\ninterface IFeedFail {\r\n    readonly type: typeof FEED_REQUEST_FAIL;\r\n}\r\n\r\ninterface IFeedSuccess {\r\n    readonly type: typeof FEED_REQUEST_SUCCESS;\r\n    readonly feed: ReadonlyArray<TOrder>;\r\n    readonly total: number;\r\n    readonly totalToday: number;  \r\n}\r\n\r\nexport const feedSuccess = (orders: ReadonlyArray<TOrder>, total: number, totalToday: number): IFeedSuccess => {\r\n    return {\r\n        type: FEED_REQUEST_SUCCESS,\r\n\r\n        feed: orders,\r\n\r\n        total: total,\r\n        totalToday: totalToday,\r\n    };\r\n}\r\n\r\nexport type TFeedActions = IFeedPending | IFeedFail | IFeedSuccess;\r\n\r\nexport const updateFeed: AppThunk = (orders: ReadonlyArray<TOrder>, total: number, totalToday: number) => (dispatch: AppDispatch) => {\r\n    dispatch(feedSuccess(orders, total, totalToday));\r\n};\r\n\r\nexport const getInitialOrders: AppThunk = () => (dispatch: AppDispatch) => {\r\n    dispatch({type: FEED_REQUEST_PENDING});\r\n    api.getInitialOrders()\r\n    .then((res) => {\r\n        if (res && res.success) return dispatch({\r\n            type: FEED_REQUEST_SUCCESS,\r\n            \r\n            feed: res.orders,\r\n            \r\n            total: res.total,\r\n            totalToday: res.totalToday,\r\n        });\r\n        throw new Error(\"Произошла ошибка при получении списка заказов.\")\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({type: FEED_REQUEST_FAIL});\r\n    })\r\n};","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\n\r\nimport { compose } from 'redux';\r\nimport { middleware } from './middlewares/middleware';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, middleware()));\r\n\r\nexport const store = createStore(rootReducer, enhancer);","import { updateFeed } from '../actions/feed';\r\n\r\nimport {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n  } from '../constants/index';\r\n\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport const middleware = () => {\r\n    return (store: { dispatch: any; }) => {\r\n      let socket: WebSocket | null = null;\r\n  \r\n      return (next: (a: AnyAction) => void) => (action: AnyAction) => {\r\n        const { dispatch } = store;\r\n        const { type, payload } = action;\r\n\r\n        if (type === WS_CONNECTION_START) {\r\n            socket = new WebSocket(payload);\r\n        }\r\n\r\n        if (socket) {\r\n            socket.onopen = event => {\r\n                dispatch({type: WS_CONNECTION_SUCCESS, payload: event});\r\n            }\r\n        \r\n            socket.onclose = event => {\r\n                dispatch({ type: WS_CONNECTION_CLOSED, payload: event });\r\n            };\r\n        \r\n            socket.onerror = event => {\r\n                dispatch({ type: WS_CONNECTION_ERROR, payload: event });\r\n            };\r\n        \r\n            socket.onmessage = event => {\r\n              const {success, orders = [], total = 0, totalToday = 0} = JSON.parse(event.data);\r\n              success && dispatch(updateFeed(orders, total, totalToday));\r\n            };\r\n        }   \r\n  \r\n        next(action);\r\n      };\r\n    };\r\n  };\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './services/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"id\":\"order-details_id__3rqtH\",\"identification\":\"order-details_identification__1BOw2\",\"image\":\"order-details_image__3zALD\",\"text\":\"order-details_text__1bI4W\",\"s\":\"order-details_s__s_4Iw\",\"skeleton-loading\":\"order-details_skeleton-loading__1MkAQ\",\"id-s\":\"order-details_id-s__4_SaG order-details_s__s_4Iw\",\"identification-s\":\"order-details_identification-s__1I8c9 order-details_s__s_4Iw\",\"text-s\":\"order-details_text-s__3ayd0 order-details_s__s_4Iw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-info_order__XmAsj\",\"id\":\"order-info_id__2babQ\",\"date\":\"order-info_date__wDPcf\",\"name\":\"order-info_name__3My07\",\"price\":\"order-info_price__2sHnE\",\"ingredients\":\"order-info_ingredients__nfLi-\",\"element\":\"order-info_element__wQzBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"burger-ingredient-skeleton_card__3-vqS\",\"image\":\"burger-ingredient-skeleton_image__1F2eg\",\"skeleton-loading\":\"burger-ingredient-skeleton_skeleton-loading__2Xs39\",\"price\":\"burger-ingredient-skeleton_price__2Z-T0\",\"money\":\"burger-ingredient-skeleton_money__1fouI\",\"name\":\"burger-ingredient-skeleton_name__1REcz\",\"icon\":\"burger-ingredient-skeleton_icon__3baCn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"burger-ingredient_link__4ff6A\",\"card\":\"burger-ingredient_card__3lK13\",\"price\":\"burger-ingredient_price__OLJUP\",\"money\":\"burger-ingredient_money__2Gge-\",\"name\":\"burger-ingredient_name__2nxP7\",\"wrapper\":\"burger-ingredient_wrapper__2riit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__Ue6Pm\",\"navigation\":\"profile_navigation__dXXaV\",\"hint\":\"profile_hint__1Hv2Z\",\"link\":\"profile_link__2as_w\",\"current\":\"profile_current__WBzkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-skeletons_section__B0Bg_\",\"title\":\"burger-skeletons_title__3S_DV\",\"skeleton-loading\":\"burger-skeletons_skeleton-loading__3BQYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sign-in_container__1AQV4\",\"text\":\"sign-in_text__27tgu\",\"link\":\"sign-in_link__3iK_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ingredient-icon_element__14fnY\",\"image\":\"ingredient-icon_image__IZWNT\",\"wrapper\":\"ingredient-icon_wrapper__29ai3\",\"number\":\"ingredient-icon_number__1eMAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__2PSUJ\",\"content\":\"app-header_content__3LIib\",\"list\":\"app-header_list__1yFVY\",\"menu\":\"app-header_menu__1cdx4\",\"wrapper\":\"app-header_wrapper__2g7Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"maker\":\"burger-constructor_maker__gp9w3\",\"list\":\"burger-constructor_list__aX1g0\",\"content\":\"burger-constructor_content__1dd7v\",\"none\":\"burger-constructor_none__2aU1W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"burger-ingredients_menu__1xG-y\",\"tab\":\"burger-ingredients_tab__oMFAS\",\"page\":\"burger-ingredients_page__3iO9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app_root__1Bf9r\",\"main\":\"app_main__21u-8\",\"center\":\"app_center__XmWTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-collection_container__1b5Js\",\"list\":\"orders-collection_list__1omPF\",\"title\":\"orders-collection_title__1m0fH\",\"element\":\"orders-collection_element__3k7xy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profile-edit_form__Jvqe6\",\"confirmation\":\"profile-edit_confirmation__Cr15F\",\"none\":\"profile-edit_none__wjKs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sign-up_container__3dH60\",\"text\":\"sign-up_text__3O8f5\",\"link\":\"sign-up_link__1Pvv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"reset-password_container__hHkug\",\"text\":\"reset-password_text__izp3b\",\"link\":\"reset-password_link__Ixu2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forgot-password_container__1aCgM\",\"text\":\"forgot-password_text__1lrMp\",\"link\":\"forgot-password_link__2harn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredients-category_container__lTJiq\",\"list\":\"ingredients-category_list__3VRl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"statistics_container__mjhgh\",\"orders\":\"statistics_orders__2_1Z4\",\"green\":\"statistics_green__QWFTZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"modal-popup_body__17tQo\",\"button\":\"modal-popup_button__v0zZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"header-link_link__1YTpA\",\"active\":\"header-link_active__TsuA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"tab_tab__1LdR-\",\"tab_type_current\":\"tab_tab_type_current__-qK2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed_container__h2Rrx\",\"orders\":\"feed_orders__2kr8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"digit-display_container__3y4Aw\",\"shadow\":\"digit-display_shadow__1khOY\"};"],"sourceRoot":""}